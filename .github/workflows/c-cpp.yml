# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build C++

on:
  push:
    branches:
      - main
    paths:
    - 'CMakeLists.txt'
    - '**/*.cpp'
    - '**/*.h'
    - '**/*.hpp'
    - '**/*.cxx'
    - '**/*.c'
    - '.github/workflows/c-cpp.yml'
  pull_request:
    branches:
      - main
  
env:
  BUILD_TYPE: Release
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_PATCH: 0

jobs:
  build_cpp17:
    env:
      CPP_VERSION: 17
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/honigkuchen/${{ github.event.repository.name }}
      options: --user root

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build
      run: |
        cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_CXX_STANDARD:INT=${{env.CPP_VERSION}} \
          -DPROJECT_VERSION_MAJOR:INT=${{env.VERSION_MAJOR}} \
          -DPROJECT_VERSION_MINOR:INT=${{env.VERSION_MINOR}} \
          -DPROJECT_VERSION_PATCH:INT=${{env.VERSION_PATCH}} \
          -DCPACK_PACKAGE_VERSION_MAJOR=${{env.VERSION_MAJOR}} \
          -DCPACK_PACKAGE_VERSION_MINOR=${{env.VERSION_MINOR}} \
          -DCPACK_PACKAGE_VERSION_PATCH=${{env.VERSION_PATCH}}
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      run: |
        ctest --output-junit ctest_cpp17_result.xml --test-dir ${{github.workspace}}/build

    - name: Upload test result
      uses: actions/upload-artifact@v4
      with:
        name: CTest result
        path: ${{github.workspace}}/build/ctest_cpp17_result.xml

    - name: Pack
      run: |
        cpack --config ${{github.workspace}}/build/CPackConfig.cmake
    
    - name: Upload debian package
      uses: actions/upload-artifact@v4
      with:
        name: CPack debian package
        path: ${{github.workspace}}/*.deb

  build_cpp20:
    env:
      CPP_VERSION: 20
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/honigkuchen/${{ github.event.repository.name }}
      options: --user root

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build
      run: |
        cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_CXX_STANDARD:INT=${{env.CPP_VERSION}} \
          -DPROJECT_VERSION_MAJOR:INT=${{env.VERSION_MAJOR}} \
          -DPROJECT_VERSION_MINOR:INT=${{env.VERSION_MINOR}} \
          -DPROJECT_VERSION_PATCH:INT=${{env.VERSION_PATCH}} \
          -DCPACK_PACKAGE_VERSION_MAJOR=${{env.VERSION_MAJOR}} \
          -DCPACK_PACKAGE_VERSION_MINOR=${{env.VERSION_MINOR}} \
          -DCPACK_PACKAGE_VERSION_PATCH=${{env.VERSION_PATCH}}
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      run: |
        ctest --output-junit ctest_cpp20_result.xml --test-dir ${{github.workspace}}/build

    - name: Upload test result
      uses: actions/upload-artifact@v4
      with:
        name: CTest result
        path: ${{github.workspace}}/build/ctest_cpp20_result.xml

    - name: Pack
      run: |
        cpack --config ${{github.workspace}}/build/CPackConfig.cmake
    
    - name: Upload debian package
      uses: actions/upload-artifact@v4
      with:
        name: CPack debian package
        path: ${{github.workspace}}/*.deb